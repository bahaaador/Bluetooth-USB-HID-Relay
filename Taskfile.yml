version: '3'

vars:
  BINARY_NAME: bt-hid-relay
  SERVICE_NAME: bt-hid-relay.service
  INSTALL_PATH: /usr/local/bin
  SERVICE_PATH: /etc/systemd/system

tasks:
  default:
    cmds:
      - task: build

  build:
    desc: Build the application
    cmds:
      - echo "Building {{.BINARY_NAME}}..."
      - go build -o bin/{{.BINARY_NAME}} ./cmd/bt-hid-relay/
    sources:
      - ./**/*.go
    generates:
      - bin/{{.BINARY_NAME}}

  build-debug:
    desc: Build with debug flags
    cmds:
      - echo "Building {{.BINARY_NAME}} with debug..."
      - go build -tags debug -o bin/{{.BINARY_NAME}} ./cmd/bt-hid-relay/
    sources:
      - ./**/*.go
    generates:
      - bin/{{.BINARY_NAME}}

  clean:
    desc: Clean build artifacts
    cmds:
      - echo "Cleaning..."
      - rm -f bin/{{.BINARY_NAME}}
      - echo "Done"
# verbose tests
  test:
    desc: Run tests
    deps: [clean]
    cmds:
      - echo "Running tests..."
      - go test ./...

  run:
    desc: Run the application locally
    deps: [build]
    cmds:
      - echo "Running {{.BINARY_NAME}}..."
      - sudo ./bin/{{.BINARY_NAME}} -debug
    requires:
      root: true
  
  doctor:
    desc: Run the diagnose tool
    cmds:
      - echo "Running diagnose tool..."
      - go run ./cmd/diagnose-io/
    requires:
      root: true

  simulate:
    desc: Run the simulate tool
    deps: [build-debug]
    cmds:
      - echo "Running simulate tool..."
      - go run ./cmd/simulate-input/
    requires:
      root: true

  update-dependencies:
    desc: Update dependencies
    cmds:
      - go get -u ./...
      - go mod tidy
      
  service:install:
    desc: Install the service
    deps: [build-debug]
    cmds:
      - echo "Installing {{.BINARY_NAME}} service..."
      - cp bin/{{.BINARY_NAME}} {{.INSTALL_PATH}}/
      - cp {{.SERVICE_NAME}} {{.SERVICE_PATH}}/
      - systemctl daemon-reload
      - systemctl enable {{.BINARY_NAME}}.service
      - systemctl start {{.BINARY_NAME}}.service
    requires:
      root: true

  service:uninstall:
    desc: Uninstall the service
    cmds:
      - echo "Uninstalling {{.BINARY_NAME}} service..."
      - systemctl stop {{.BINARY_NAME}}.service || true
      - systemctl disable {{.BINARY_NAME}}.service || true
      - rm -f {{.SERVICE_PATH}}/{{.SERVICE_NAME}}
      - rm -f {{.INSTALL_PATH}}/{{.BINARY_NAME}}
      - systemctl daemon-reload
      - systemctl reset-failed {{.BINARY_NAME}}.service || true
    requires:
      root: true

  service:status:
    desc: Check service status
    cmds:
      - systemctl status {{.BINARY_NAME}}.service || true
    requires:
      root: true

  service:logs:
    desc: View service logs
    cmds:
      - journalctl -u {{.BINARY_NAME}}.service --follow
    requires:
      root: true

  service:start:
    desc: Start the service
    deps: [build]
    cmds:
      - systemctl start {{.BINARY_NAME}}.service
    requires:
      root: true

  service:stop:
    desc: Stop the service
    cmds:
      - systemctl stop {{.BINARY_NAME}}.service
    requires:
      root: true

  service:restart:
    desc: Restart the service
    cmds:
      - systemctl restart {{.BINARY_NAME}}.service
    requires:
      root: true
